<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
    This is the main compilation target for Q# files.
    It calls the Q# compiler (qsc.dll) to generate C# files that are then added as part of the compilation files
    of this project.
  -->
  <Target Name="QSharpCompile"
      Inputs="@(QSharpFiles)"
      Outputs="$(QSharpOutDir)/$(QSharpTree).bson"
      DependsOnTargets="QSharpPrepare"
      BeforeTargets="CheckForDuplicateItems;CoreCompile"
      Condition="$(RunQsc)">
    <PropertyGroup>
      <QscCommand>$(QscExe) $(QSharpDocsGen) --qst "$(QSharpTree)" --input "@(QSharpFiles,'" "')" --references "@(QsReferences,'" "')" --output "$(QSharpOutDir)"</QscCommand>
    </PropertyGroup>
    <MakeDir Directories="$(QSharpSrcOutDir)" />
    <MakeDir Condition="$(RunQDocGen)" Directories="$(QSharpDocsOutDir)" />
    <WriteLinesToFile File="$(QSharpOutDir)qsc-command.txt" Lines=":: files ::;@(QSharpFiles);:: qsim ::;$(QSimDll);;:: references ::;@(QsReferences);:: command ::;$(QscCommand)" Overwrite="true"/>
    <!-- Remove all existing codegen files first: -->
    <ItemGroup>
      <QSharpCodegenFiles Include="$(QSharpSrcOutDir)**/*.*" />
    </ItemGroup>
    <Delete Files="@(QSharpCodegenFiles)" />
    <Exec Command="$(QscCommand)" />
    <ItemGroup>
      <EmbeddedResource Include="$(QSharpOutDir)/$(QSharpTree).bson" LogicalName="__qsharp_data_bond_v1__.bson" Visible="false" />
      <Compile Include="$(QSharpSrcOutDir)**/*.g.cs" Visible="false" AutoGen="true" />
    </ItemGroup>
  </Target>

  <!--
    Removes all the intermediate build outputs.
  -->
  <Target Name="QSharpClean" 
      DependsOnTargets="QSharpPrepare" 
      BeforeTargets="Clean">
    <ItemGroup>
      <QSharpBuiltFiles Include="$(QSharpOutDir)**/*.*" />
    </ItemGroup>
    <Delete Files="@(QSharpBuiltFiles)" />
  </Target>

  <!--
    Helper target that sets the variables needed for Q# compilation.
  -->
  <Target Name="QSharpPrepare" 
      DependsOnTargets="ResolveAssemblyReferences" 
      BeforeTargets="CoreCompile;QSharpClean">
    <ItemGroup>
      <QsReferences Include="@(ReferencePath)" Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(%(FullPath), '(?i)system.|mscorlib|netstandard.library|microsoft.netcore.app')) == false" />
      <QSharpFiles Include="@(QSharpCompile)">
        <Visible>false</Visible>
      </QSharpFiles>
      <SkippedQSharpFiles Include="**/*.qs" Exclude="@(QSharpFiles);@(QSharpIgnore)">
        <Visible>false</Visible>
      </SkippedQSharpFiles>
    </ItemGroup>
    <PropertyGroup>
      <QSharpOutDir Condition="'$(QSharpOutDir)' == ''">$(BaseIntermediateOutputPath)qsharp</QSharpOutDir>
      <QSharpOutDir>$([MSBuild]::Unescape('$(QSharpOutDir)').Replace('\', '/'))</QSharpOutDir>
      <QSharpOutDir Condition="!HasTrailingSlash('$(QSharpOutDir)')">$(QSharpOutDir)/</QSharpOutDir>
      <QSharpSrcOutDir Condition="'$(QSharpSrcOutDir)' == ''">$(QSharpOutDir)src/</QSharpSrcOutDir>
      <QSharpFormatBackupDir Condition="'$(QSharpFormatBackupDir)' == ''">$(QSharpOutDir).backup.$([System.DateTime]::Now.ToString(`yyyyMMddhhmmss`))</QSharpFormatBackupDir>
      <QSharpDocsOutDir Condition="'$(QSharpDocsOutDir)' == ''">$(QSharpOutDir)docs/</QSharpDocsOutDir>
      <QSharpDocsOutDir>$([MSBuild]::Unescape('$(QSharpDocsOutDir)').Replace('\', '/'))</QSharpDocsOutDir>
      <QSharpDocsGen Condition="$(RunQDocGen)">--doc "$(QSharpDocsOutDir)"</QSharpDocsGen>
      <QSharpTree Condition="'$(QSharpTree)' == ''">$([System.String]::Copy('$(AssemblyName)').Replace(' ',''))</QSharpTree>
    </PropertyGroup>
    <Warning
        Condition="'@(SkippedQbFiles)' != ''"
        Text="Some .qs files in your project will be skipped during build: @(SkippedQSharpFiles)" />
  </Target>
</Project>
